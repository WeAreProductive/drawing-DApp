/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IApplication,
  IApplicationInterface,
} from "../../../contracts/dapp/IApplication";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "claim",
        type: "bytes32",
      },
    ],
    name: "ClaimNotAccepted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOutputHashesSiblingsArrayLength",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
    ],
    name: "OutputNotExecutable",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
    ],
    name: "OutputNotReexecutable",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "contract IConsensus",
        name: "newConsensus",
        type: "address",
      },
    ],
    name: "NewConsensus",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "outputIndex",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
    ],
    name: "OutputExecuted",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "outputIndex",
            type: "uint64",
          },
          {
            internalType: "bytes32[]",
            name: "outputHashesSiblings",
            type: "bytes32[]",
          },
        ],
        internalType: "struct OutputValidityProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "executeOutput",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getConsensus",
    outputs: [
      {
        internalType: "contract IConsensus",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTemplateHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IConsensus",
        name: "newConsensus",
        type: "address",
      },
    ],
    name: "migrateToConsensus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "output",
        type: "bytes",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "outputIndex",
            type: "uint64",
          },
          {
            internalType: "bytes32[]",
            name: "outputHashesSiblings",
            type: "bytes32[]",
          },
        ],
        internalType: "struct OutputValidityProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "validateOutput",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "outputHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "uint64",
            name: "outputIndex",
            type: "uint64",
          },
          {
            internalType: "bytes32[]",
            name: "outputHashesSiblings",
            type: "bytes32[]",
          },
        ],
        internalType: "struct OutputValidityProof",
        name: "proof",
        type: "tuple",
      },
    ],
    name: "validateOutputHash",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "outputIndex",
        type: "uint256",
      },
    ],
    name: "wasOutputExecuted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IApplication__factory {
  static readonly abi = _abi;
  static createInterface(): IApplicationInterface {
    return new utils.Interface(_abi) as IApplicationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IApplication {
    return new Contract(address, _abi, signerOrProvider) as IApplication;
  }
}
