/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  Portal,
  PortalInterface,
} from "../../../contracts/portals/Portal";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IInputBox",
        name: "inputBox",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "getInputBox",
    outputs: [
      {
        internalType: "contract IInputBox",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161012738038061012783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051609f6100886000396000602e0152609f6000f3fe6080604052348015600f57600080fd5b506004361060275760003560e01c8062aace9a14602c575b600080fd5b7f00000000000000000000000000000000000000000000000000000000000000006040516001600160a01b03909116815260200160405180910390f3fea2646970667358221220310968e502c4a521cad270ae6f9b907ea5bf006edb8714cb763bdddbb321871564736f6c63430008170033";

type PortalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PortalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Portal__factory extends ContractFactory {
  constructor(...args: PortalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    inputBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Portal> {
    return super.deploy(inputBox, overrides || {}) as Promise<Portal>;
  }
  override getDeployTransaction(
    inputBox: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(inputBox, overrides || {});
  }
  override attach(address: string): Portal {
    return super.attach(address) as Portal;
  }
  override connect(signer: Signer): Portal__factory {
    return super.connect(signer) as Portal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PortalInterface {
    return new utils.Interface(_abi) as PortalInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Portal {
    return new Contract(address, _abi, signerOrProvider) as Portal;
  }
}
