/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DS3Upgrade,
  DS3UpgradeInterface,
} from "../../../../contracts/test_helper/upgrade_initializers/DS3Upgrade";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "z",
        type: "uint32",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610130806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063a6af585414602d575b600080fd5b60cd603836600460cf565b7ff85303be6bcde94f0463a6aa7a400c61c189a370c649530913625784ad517b1c547fc47562ccbe325ce9e309f81a37bccc9baa9b4a3de9b8d88bd7e4f2b6e504ca95805467ffffffffffffffff191663ffffffff80841691909117640100000000938490048216909302929092176bffffffff00000000000000001916680100000000000000009390921692909202179055565b005b60006020828403121560e057600080fd5b813563ffffffff8116811460f357600080fd5b939250505056fea2646970667358221220b8bcb7b44ffdd890b3ab53cf709803e2d19605968b895630635ccf617d6a9e7664736f6c634300080d0033";

type DS3UpgradeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DS3UpgradeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DS3Upgrade__factory extends ContractFactory {
  constructor(...args: DS3UpgradeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DS3Upgrade> {
    return super.deploy(overrides || {}) as Promise<DS3Upgrade>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DS3Upgrade {
    return super.attach(address) as DS3Upgrade;
  }
  override connect(signer: Signer): DS3Upgrade__factory {
    return super.connect(signer) as DS3Upgrade__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DS3UpgradeInterface {
    return new utils.Interface(_abi) as DS3UpgradeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DS3Upgrade {
    return new Contract(address, _abi, signerOrProvider) as DS3Upgrade;
  }
}
