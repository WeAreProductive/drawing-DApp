/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DS6Upgrade,
  DS6UpgradeInterface,
} from "../../../../contracts/test_helper/upgrade_initializers/DS6Upgrade";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint128",
        name: "x",
        type: "uint128",
      },
    ],
    name: "upgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060cb8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063027f53bf14602d575b600080fd5b606560383660046067565b6001600160801b03167fe44d9aca4747abb7268e5218fc7ac0390858570cb5a7d6dc5923e710e5a5ddcc55565b005b600060208284031215607857600080fd5b81356001600160801b0381168114608e57600080fd5b939250505056fea26469706673582212205becbaf4640d4486211066d5f52baa228c2dba84addedf8431274fe25337028d64736f6c634300080d0033";

type DS6UpgradeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DS6UpgradeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DS6Upgrade__factory extends ContractFactory {
  constructor(...args: DS6UpgradeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DS6Upgrade> {
    return super.deploy(overrides || {}) as Promise<DS6Upgrade>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DS6Upgrade {
    return super.attach(address) as DS6Upgrade;
  }
  override connect(signer: Signer): DS6Upgrade__factory {
    return super.connect(signer) as DS6Upgrade__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DS6UpgradeInterface {
    return new utils.Interface(_abi) as DS6UpgradeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DS6Upgrade {
    return new Contract(address, _abi, signerOrProvider) as DS6Upgrade;
  }
}
