/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DS7Downgrade,
  DS7DowngradeInterface,
} from "../../../../contracts/test_helper/upgrade_initializers/DS7Downgrade";

const _abi = [
  {
    inputs: [],
    name: "downgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060d68061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806306ce466414602d575b600080fd5b7fe44d9aca4747abb7268e5218fc7ac0390858570cb5a7d6dc5923e710e5a5ddcc547ff85303be6bcde94f0463a6aa7a400c61c189a370c649530913625784ad517b1c8054600160801b830463ffffffff90811664010000000002931667ffffffffffffffff199091161791909117905500fea264697066735822122097b6e6d7008f04482e5d4039973c35210f77afa52202f1e9d9b8c436cbd26ced64736f6c634300080d0033";

type DS7DowngradeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DS7DowngradeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DS7Downgrade__factory extends ContractFactory {
  constructor(...args: DS7DowngradeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DS7Downgrade> {
    return super.deploy(overrides || {}) as Promise<DS7Downgrade>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DS7Downgrade {
    return super.attach(address) as DS7Downgrade;
  }
  override connect(signer: Signer): DS7Downgrade__factory {
    return super.connect(signer) as DS7Downgrade__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DS7DowngradeInterface {
    return new utils.Interface(_abi) as DS7DowngradeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DS7Downgrade {
    return new Contract(address, _abi, signerOrProvider) as DS7Downgrade;
  }
}
