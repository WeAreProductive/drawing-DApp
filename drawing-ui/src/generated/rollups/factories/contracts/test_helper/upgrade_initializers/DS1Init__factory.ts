/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DS1Init,
  DS1InitInterface,
} from "../../../../contracts/test_helper/upgrade_initializers/DS1Init";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "x",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "y",
        type: "uint32",
      },
    ],
    name: "init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610102806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063dca75ea314602d575b600080fd5b60846038366004609e565b7ff85303be6bcde94f0463a6aa7a400c61c189a370c649530913625784ad517b1c805463ffffffff9283166401000000000267ffffffffffffffff199091169390921692909217179055565b005b803563ffffffff81168114609957600080fd5b919050565b6000806040838503121560b057600080fd5b60b7836086565b915060c3602084016086565b9050925092905056fea26469706673582212203fdd1edfad1efbafa657ef60b64dbd13a58d5f768ae2bc99071e1e943f6e0a7564736f6c634300080d0033";

type DS1InitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DS1InitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DS1Init__factory extends ContractFactory {
  constructor(...args: DS1InitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DS1Init> {
    return super.deploy(overrides || {}) as Promise<DS1Init>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DS1Init {
    return super.attach(address) as DS1Init;
  }
  override connect(signer: Signer): DS1Init__factory {
    return super.connect(signer) as DS1Init__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DS1InitInterface {
    return new utils.Interface(_abi) as DS1InitInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DS1Init {
    return new Contract(address, _abi, signerOrProvider) as DS1Init;
  }
}
