/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DS6Downgrade,
  DS6DowngradeInterface,
} from "../../../../contracts/test_helper/upgrade_initializers/DS6Downgrade";

const _abi = [
  {
    inputs: [],
    name: "downgrade",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b50608d8061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c806306ce466414602d575b600080fd5b605560007fe44d9aca4747abb7268e5218fc7ac0390858570cb5a7d6dc5923e710e5a5ddcc55565b00fea26469706673582212203630b77c08ed2d26ffc473a14c04ec40222e074524aa16b27529c757246e991c64736f6c634300080d0033";

type DS6DowngradeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DS6DowngradeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DS6Downgrade__factory extends ContractFactory {
  constructor(...args: DS6DowngradeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DS6Downgrade> {
    return super.deploy(overrides || {}) as Promise<DS6Downgrade>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DS6Downgrade {
    return super.attach(address) as DS6Downgrade;
  }
  override connect(signer: Signer): DS6Downgrade__factory {
    return super.connect(signer) as DS6Downgrade__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DS6DowngradeInterface {
    return new utils.Interface(_abi) as DS6DowngradeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DS6Downgrade {
    return new Contract(address, _abi, signerOrProvider) as DS6Downgrade;
  }
}
