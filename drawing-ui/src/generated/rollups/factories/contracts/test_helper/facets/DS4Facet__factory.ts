/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  DS4Facet,
  DS4FacetInterface,
} from "../../../../contracts/test_helper/facets/DS4Facet";

const _abi = [
  {
    inputs: [],
    name: "getY",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "y",
        type: "uint32",
      },
    ],
    name: "setY",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061011b806100206000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630b7f16651460375780631468db5e146072575b600080fd5b7fff42502b340deee9bf2882182aa543c5e13678ef8c456702ec177872cd324d08546040805163ffffffff9092168252519081900360200190f35b60b8607d36600460ba565b7fff42502b340deee9bf2882182aa543c5e13678ef8c456702ec177872cd324d08805463ffffffff191663ffffffff92909216919091179055565b005b60006020828403121560cb57600080fd5b813563ffffffff8116811460de57600080fd5b939250505056fea2646970667358221220b6a22163f2b1516c2c08d2808745d30398ceca0565134f5c133e1f97fd4252be64736f6c634300080d0033";

type DS4FacetConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DS4FacetConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DS4Facet__factory extends ContractFactory {
  constructor(...args: DS4FacetConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DS4Facet> {
    return super.deploy(overrides || {}) as Promise<DS4Facet>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DS4Facet {
    return super.attach(address) as DS4Facet;
  }
  override connect(signer: Signer): DS4Facet__factory {
    return super.connect(signer) as DS4Facet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DS4FacetInterface {
    return new utils.Interface(_abi) as DS4FacetInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DS4Facet {
    return new Contract(address, _abi, signerOrProvider) as DS4Facet;
  }
}
