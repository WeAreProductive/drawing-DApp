/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SimpleContract,
  SimpleContractInterface,
} from "../../../contracts/test_helper/SimpleContract";

const _abi = [
  {
    inputs: [],
    name: "simple_function",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "simple_function",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610173806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80638dc21a771461003b578063ae312c8b1461007d575b600080fd5b604080518082019091526014815273333937b69039b4b6b8363290333ab731ba34b7b760611b60208201525b60405161007491906100ac565b60405180910390f35b61006761008b366004610101565b606060405180606001604052806023815260200161011b6023913992915050565b600060208083528351808285015260005b818110156100d9578581018301518582016040015282016100bd565b818111156100eb576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561011357600080fd5b503591905056fe66726f6d2073696d706c652066756e6374696f6e207769746820706172616d65746572a26469706673582212209cf46c1c680259a3901fdc8df6cfbd973a52d3ae2c78266965f403f158e77b0464736f6c634300080d0033";

type SimpleContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleContract__factory extends ContractFactory {
  constructor(...args: SimpleContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleContract> {
    return super.deploy(overrides || {}) as Promise<SimpleContract>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleContract {
    return super.attach(address) as SimpleContract;
  }
  override connect(signer: Signer): SimpleContract__factory {
    return super.connect(signer) as SimpleContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleContractInterface {
    return new utils.Interface(_abi) as SimpleContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleContract {
    return new Contract(address, _abi, signerOrProvider) as SimpleContract;
  }
}
