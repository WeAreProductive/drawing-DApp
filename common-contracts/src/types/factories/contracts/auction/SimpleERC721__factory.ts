/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  SimpleERC721,
  SimpleERC721Interface,
} from "../../../contracts/auction/SimpleERC721";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "mintTo",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600c81526020016b53696d706c6545524337323160a01b8152506040518060400160405280600681526020016553494d37323160d01b815250816000908162000067919062000124565b50600162000076828262000124565b505050620001f0565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000aa57607f821691505b602082108103620000cb57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200011f57600081815260208120601f850160051c81016020861015620000fa5750805b601f850160051c820191505b818110156200011b5782815560010162000106565b5050505b505050565b81516001600160401b038111156200014057620001406200007f565b620001588162000151845462000095565b84620000d1565b602080601f831160018114620001905760008415620001775750858301515b600019600386901b1c1916600185901b1785556200011b565b600085815260208120601f198616915b82811015620001c157888601518255948401946001909101908401620001a0565b5085821015620001e05787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61132080620002006000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb465146101e1578063b88d4fde146101f4578063c87b56dd14610207578063e985e9c51461021a57600080fd5b806370a08231146101a5578063755edd17146101c657806395d89b41146101d957600080fd5b8063095ea7b3116100c8578063095ea7b31461015757806323b872dd1461016c57806342842e0e1461017f5780636352211e1461019257600080fd5b806301ffc9a7146100ef57806306fdde0314610117578063081812fc1461012c575b600080fd5b6101026100fd366004610eac565b610256565b60405190151581526020015b60405180910390f35b61011f6102a8565b60405161010e9190610f19565b61013f61013a366004610f2c565b61033a565b6040516001600160a01b03909116815260200161010e565b61016a610165366004610f61565b610361565b005b61016a61017a366004610f8b565b61047b565b61016a61018d366004610f8b565b6104ac565b61013f6101a0366004610f2c565b6104c7565b6101b86101b3366004610fc7565b610527565b60405190815260200161010e565b6101b86101d4366004610fc7565b6105ad565b61011f6105d4565b61016a6101ef366004610fe2565b6105e3565b61016a610202366004611034565b6105f2565b61011f610215366004610f2c565b61062a565b610102610228366004611110565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061028757506001600160e01b03198216635b5e139f60e01b145b806102a257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600080546102b790611143565b80601f01602080910402602001604051908101604052809291908181526020018280546102e390611143565b80156103305780601f1061030557610100808354040283529160200191610330565b820191906000526020600020905b81548152906001019060200180831161031357829003601f168201915b5050505050905090565b60006103458261069e565b506000908152600460205260409020546001600160a01b031690565b600061036c826104c7565b9050806001600160a01b0316836001600160a01b0316036103de5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806103fa57506103fa8133610228565b61046c5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c00000060648201526084016103d5565b6104768383610700565b505050565b610485338261076e565b6104a15760405162461bcd60e51b81526004016103d59061117d565b6104768383836107ed565b610476838383604051806020016040528060008152506105f2565b6000818152600260205260408120546001600160a01b0316806102a25760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103d5565b60006001600160a01b0382166105915760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016103d5565b506001600160a01b031660009081526003602052604090205490565b60006105bd600680546001019055565b60006105c860065490565b90506102a28382610951565b6060600180546102b790611143565b6105ee33838361096b565b5050565b6105fc338361076e565b6106185760405162461bcd60e51b81526004016103d59061117d565b61062484848484610a39565b50505050565b60606106358261069e565b600061064c60408051602081019091526000815290565b9050600081511161066c5760405180602001604052806000815250610697565b8061067684610a6c565b6040516020016106879291906111ca565b6040516020818303038152906040525b9392505050565b6000818152600260205260409020546001600160a01b03166106fd5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b60448201526064016103d5565b50565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610735826104c7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b60008061077a836104c7565b9050806001600160a01b0316846001600160a01b031614806107c157506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806107e55750836001600160a01b03166107da8461033a565b6001600160a01b0316145b949350505050565b826001600160a01b0316610800826104c7565b6001600160a01b0316146108265760405162461bcd60e51b81526004016103d5906111f9565b6001600160a01b0382166108885760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b60648201526084016103d5565b826001600160a01b031661089b826104c7565b6001600160a01b0316146108c15760405162461bcd60e51b81526004016103d5906111f9565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6105ee828260405180602001604052806000815250610aff565b816001600160a01b0316836001600160a01b0316036109cc5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c65720000000000000060448201526064016103d5565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b610a448484846107ed565b610a5084848484610b32565b6106245760405162461bcd60e51b81526004016103d59061123e565b60606000610a7983610c33565b600101905060008167ffffffffffffffff811115610a9957610a9961101e565b6040519080825280601f01601f191660200182016040528015610ac3576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084610acd57509392505050565b610b098383610d0b565b610b166000848484610b32565b6104765760405162461bcd60e51b81526004016103d59061123e565b60006001600160a01b0384163b15610c2857604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610b76903390899088908890600401611290565b6020604051808303816000875af1925050508015610bb1575060408051601f3d908101601f19168201909252610bae918101906112cd565b60015b610c0e573d808015610bdf576040519150601f19603f3d011682016040523d82523d6000602084013e610be4565b606091505b508051600003610c065760405162461bcd60e51b81526004016103d59061123e565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490506107e5565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b8310610c725772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef81000000008310610c9e576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc100008310610cbc57662386f26fc10000830492506010015b6305f5e1008310610cd4576305f5e100830492506008015b6127108310610ce857612710830492506004015b60648310610cfa576064830492506002015b600a83106102a25760010192915050565b6001600160a01b038216610d615760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016103d5565b6000818152600260205260409020546001600160a01b031615610dc65760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103d5565b6000818152600260205260409020546001600160a01b031615610e2b5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016103d5565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160e01b0319811681146106fd57600080fd5b600060208284031215610ebe57600080fd5b813561069781610e96565b60005b83811015610ee4578181015183820152602001610ecc565b50506000910152565b60008151808452610f05816020860160208601610ec9565b601f01601f19169290920160200192915050565b6020815260006106976020830184610eed565b600060208284031215610f3e57600080fd5b5035919050565b80356001600160a01b0381168114610f5c57600080fd5b919050565b60008060408385031215610f7457600080fd5b610f7d83610f45565b946020939093013593505050565b600080600060608486031215610fa057600080fd5b610fa984610f45565b9250610fb760208501610f45565b9150604084013590509250925092565b600060208284031215610fd957600080fd5b61069782610f45565b60008060408385031215610ff557600080fd5b610ffe83610f45565b91506020830135801515811461101357600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561104a57600080fd5b61105385610f45565b935061106160208601610f45565b925060408501359150606085013567ffffffffffffffff8082111561108557600080fd5b818701915087601f83011261109957600080fd5b8135818111156110ab576110ab61101e565b604051601f8201601f19908116603f011681019083821181831017156110d3576110d361101e565b816040528281528a60208487010111156110ec57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561112357600080fd5b61112c83610f45565b915061113a60208401610f45565b90509250929050565b600181811c9082168061115757607f821691505b60208210810361117757634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600083516111dc818460208801610ec9565b8351908301906111f0818360208801610ec9565b01949350505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906112c390830184610eed565b9695505050505050565b6000602082840312156112df57600080fd5b815161069781610e9656fea264697066735822122095fe8d353a003c0bceda9b664b2106826ecbc459fcf662d042fceee03ddbac1c64736f6c63430008120033";

type SimpleERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SimpleERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SimpleERC721__factory extends ContractFactory {
  constructor(...args: SimpleERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SimpleERC721> {
    return super.deploy(overrides || {}) as Promise<SimpleERC721>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SimpleERC721 {
    return super.attach(address) as SimpleERC721;
  }
  override connect(signer: Signer): SimpleERC721__factory {
    return super.connect(signer) as SimpleERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SimpleERC721Interface {
    return new utils.Interface(_abi) as SimpleERC721Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SimpleERC721 {
    return new Contract(address, _abi, signerOrProvider) as SimpleERC721;
  }
}
